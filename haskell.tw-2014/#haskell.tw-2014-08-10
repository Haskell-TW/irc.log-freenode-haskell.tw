15:10:45 <mno2> https://gist.github.com/MnO2/a50bb38b7120b0cebb66#file-unbound_type_var-hs
15:11:34 <mno2> 在 Trace Haxl 的 code。看到類似的結構，我以為一定要加  -XMultiParamTypeClasses 才會過，結果這樣就過了耶 @@
15:25:20 <CindyLinz> class Name f where 不是只有一個 param 嗎?
15:36:53 <mno2> CindyLinz: thyName :: f a b -> String 。就 a b 是突然出現的啊
15:37:08 <mno2> 我以為要 class Name f a b where  thyName :: f a b -> String
15:40:41 <CindyLinz> 那個不算在 class 那邊的 param.. 嗯, 反過來想, 如果這樣會被歸類為 multi param type class 的話, 那麼以前 Monad m 也只能用 multi param 才能做了
15:47:13 <mno2> 對耶。你說的沒錯。以前覺得很自然，但我現在反而搞混了。我不懂為什麼不算在 multi param type classes
15:52:28 <CindyLinz> 就, 沒有限定, 可以是 forall 這樣
15:53:02 <CindyLinz> 如果寫成 class Monad m a where 的話, 每一個不同的 a 都可以有不一樣的實作
16:15:16 <mno2> 玩了一下，我大概懂了。不過我現在反而覺得這樣的寫法容易讓人搞混。
16:15:41 <mno2> 像是 ScopedTypeVariables 就需要加 forall
16:22:41 <CindyLinz> 嗯嗯 完全沒地方 explicitly 寫 forall XD
20:52:27 <suhorng> Haskell Platform is out https://www.haskell.org/platform/
20:52:39 <CindyLinz> :D
20:54:59 <suhorng> 千呼萬喚始出來
20:58:41 <whitglint> 網站背景圖不錯 XD
20:59:09 <suhorng> 對呀，竟然換新了XD
21:00:08 <CindyLinz> suhorng: 下個月的 topic? XD
21:01:26 <suhorng> 應該沒什麼特別要講的吧www
21:02:02 <CindyLinz> 我也不知道 ._.
22:17:35 <mno2> 我覺得 Haxl 除了 extension 多了一點。要不然還蠻適合初學者讀的耶>
22:17:51 <mno2> 以後不推薦 xmonad 改推薦 Haxl 好了
22:18:45 <mno2> 現在只會 Haskell98 的部分大概也不能說會 Haskell 了。幾乎沒看到什麼 library 只用 98
22:18:49 <CindyLinz> 這兩個又不能互相取代 ^^|
22:19:42 <petercommand> haskell-platform是整合包嗎?
22:20:30 <mno2> 對啊。就是把 hackage 上穩定的部分做成一大包
22:22:30 <suhorng> 對於 Windows user 特別方便XD 省得自己設定東西
22:23:29 <CindyLinz> 對! windows 就是要懶人包!
22:23:48 <suhorng> 不過用沙盒可能不會差太多就是
22:24:18 <CindyLinz> 沒在沙盒的, 都是 administrator!
22:56:15 <suhorng> https://www.coursera.org/course/proglang PL 十月要開課了
22:58:22 <mno2> 有看到信
