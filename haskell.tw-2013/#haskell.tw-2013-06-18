13:04:52 <MnO2> https://www.fpcomplete.com/business/designer-ide
13:05:06 <MnO2> FP haskell center 開放註冊
19:42:47 <MnO2> http://www.yinwang.org/blog-cn/2013/06/17/work/
19:42:56 <MnO2> 久違的 yinwang 又來了
19:56:31 <UncleHandsome> !! 好久不見他了XD
19:58:20 <UncleHandsome> 好威 能這樣說話也真的很了不起D
19:58:49 <letoh> 「对测试过分依赖的人，往往不具逻辑思维的能力」
19:58:56 <letoh> 有點感覺
19:59:34 <letoh> 我有的同事都是改一改  然後說有問題的話 test team 會測出來= =  問題是有些問題明明看一下程式碼就知道會錯了
20:02:02 <UncleHandsome> XDD
20:02:11 <MnO2> 有時候寫測試隱含著政治問題就是
20:02:36 <letoh> 不過我承認資深工程師補洞的能力特強  人家發現有洞以後很快就可以補好
20:03:01 <letoh> 可能慢慢地變成用補洞方式建系統XD
20:03:17 <MnO2> 這樣其實很可怕 xD
20:03:25 <CindyLinz> 我們公司最近也有這困擾... 不過只有我覺得這是困擾 orz
20:04:04 <letoh> 問題是東西出去以後問題其實不多... 只要資深工程師都不走的話  公司大概覺得這模式沒啥問題吧XD
20:04:06 <CindyLinz> 我討厭有 regular test team 的建置.....
20:04:54 <UncleHandsome> 其實對普通工程師來說 一步到位也真的不簡單吧XD？
20:04:54 <letoh> 那個其實還好  就想成 qa team
20:05:19 <letoh> 問題是開發方式和開發流程/風險的管理方式
20:06:19 <CindyLinz> 是方式問題.. 如果起初就依賴測試團隊
20:06:44 <CindyLinz> 他變資深以後只是很會依賴測試團隊... XD
20:07:07 <UncleHandsome> lol 原來如此
20:07:14 <CindyLinz> 他一直都說不出他的程式為什麼會對, 他依賴的是別人無法說出他的程式哪裡有錯..
20:08:39 <CindyLinz> 不過我討厭 regular test team 建置的原因不是這邊, 反正那是別人寫程式的方式而已..
20:08:45 <letoh> 我們這裡是還沒到那麼極端的情況啦  那樣太可怕了XD
20:09:01 <CindyLinz> 我討厭明明就不需要測試, 或是我可以明白點出這些測試是無效測試的場合
20:09:12 <CindyLinz> 還一定要經過一段為時不短的測試流程
20:10:09 <CindyLinz> 那我就會有被防礙到的感覺.. orz
20:10:36 <letoh> 那就看制度怎麼定了   不過我覺得規範統一流程的好處是可以避免大部份的意外  這時就只能犧牲少數人了XD
20:11:00 <MnO2> 同意，所以我覺得測試是政治問題
20:15:41 <letoh> 我覺得可能有一部份可以說是政治問題吧  但有測試流程的話通常可以避免愚蠢的錯誤  除非管理者很清楚知道自己帶的是王垠複製人團隊，那就可以省下這些沒必要的程序XD
20:16:49 <CindyLinz> 對啊.. 強出頭說這個不需要測試, 萬一壞了還會變成把柄; 不用腦地丟去測試, 反正虧的是公司的靈活性 orz
20:17:09 <CindyLinz> 等測試結果出來前還可以摸魚這樣....||
20:19:38 <letoh> 我最近其實有遇到另一個困擾
20:22:54 <CindyLinz> 為什麼你開了個頭就不繼續講了.. 囧
20:23:16 <letoh> 自從伙伴從我這學會用 vim 看 log 的方法以後，他們就很依賴看 log 解 bug... 問題是那些 log 未必是 well-designed... 還要搭配對程式碼的熟悉度才有幫助，但他們現在變得寧願花一天翻 log，也不肯花半小時看一下程式碼XD
20:23:32 <letoh> 因為字有點多XD
20:23:48 <MnO2> 那多埋個 log:  RTFC
20:23:59 <letoh> lol
20:24:06 <CindyLinz> 我好難理解只看 log 不看 code 要怎麼看歐 @@"
20:24:30 <CindyLinz> 我看 log 是去對應產生那一行 log 的 code 看
20:24:43 <CindyLinz> 有點像是把 log 當作... offline 的 step debug 在用
20:25:04 <CindyLinz> 是說你們家的程式生出來的 log 很精美嗎? @_@"
20:25:17 <letoh> 我也很好奇啊，但講都講不聽...我自己是花很多時間在看 code，除了看我的也看別人的，所以通常我手上幾個專案可以只看 log 就能處理很多問題
20:25:25 <CindyLinz> 會附上前後列的 code, 而且還上色 XD
20:25:33 <letoh> 沒有耶 但我有寫 visualization 程式XD
20:25:58 <CindyLinz> 那用你的 visualization 程式把程式碼拉進去洗頁給他們看? XD
20:27:08 <letoh> 其實程式沒給他們  我有針對不同問題寫分析程式  但我覺得給他們以後應該更不會看 code 了... 所以一直藏著XD  但他們知道我有就是，只是不敢向我要XD
20:27:38 <letoh> 我還有一個簡單的 log debugger XD
20:28:27 <letoh> 反向分析可能跑過哪一些程式碼流程...
20:32:29 <MnO2> 也許要過一陣子才能領悟
20:46:24 <CindyLinz> 呃... ^^|
20:46:43 <CindyLinz> 我們有給客服用的 viewer
20:46:59 <CindyLinz> 給客服看玩家的牌局進行過程
20:47:18 <CindyLinz> 不過好像真該寫些給我們工程師自己的 viewer, 對自己好一點哄 :Q
20:52:37 <letoh> 有工具可以省一點時間啦  而且重要的是可以先證明不是自己的問題XD
20:53:34 <letoh> 常常機器放個一兩天 log 就一堆了，人工看根本浪費時間，只好想辦法幫自己省點力氣
20:55:29 <CindyLinz> 嗯嗯, 證明不是自己問題真的好重要.. 不過這是在對自己有足夠自信的時候才會常常有用 ^^|
20:55:46 <CindyLinz> 不然, 如果其實大部分真的都是自己的問題..... (默)
20:56:01 <letoh> 這時只能默默吞下去XD
20:56:41 <CindyLinz> 就不要 announce 中間的發現了這樣? XD
20:56:43 <letoh> 不過可以在短時間確認原因才是最重要的 (結果現在大部份 issue 都先丟給我= =)
20:57:31 <letoh> 那樣會很慘  每次丟新版出去的成本有點高
20:57:32 <CindyLinz> 那... 你就不要那麼短時間就 announce 啊 ^^|  可以抽點時間先做別的 ticket?
20:57:59 <CindyLinz> 喔我說的中間發現是說: 嘿~ 我發現了! 是我弄爆的!!
20:58:14 <letoh> 不行啦  因為別人可能需要多一點時間解，萬一趕不上 release 就糟了XD
20:58:20 <CindyLinz> 然後都還沒去找出是什麼問題, 也還沒修這樣..
20:58:42 <CindyLinz> 痛了一次, 這樣可能同事會變多啊?
20:59:29 <letoh> 同事變多未必有幫助啊XD
20:59:46 <CindyLinz> 就來得及了啊 XD
21:00:33 <letoh> 這實在不好說  我覺得自己一個人動手的效率可能會好很多XD
21:05:28 <CindyLinz> 是沒錯 :Q
