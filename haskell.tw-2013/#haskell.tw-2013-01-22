12:24:25 <favonia> _13h: 我覺得我沒有被說服 Haskell 不能做那些事情或是做那些事情比較糟糕... 但很有可能現在還沒有人寫很方便的 library 可以用 xD
12:25:25 <_13h> 這我同意
12:27:01 <_13h> 我還是第一次看到有人用軟硬體來比喻 type system
12:28:46 <favonia> _13h: 我必須要說他講的什麼重新啟動根本跟型態系統無關啊...
12:30:05 <favonia> 不過我不想花時間戰這個（懶）
12:30:20 <_13h> 重新啟動應該是另外一件事啦
12:30:49 <favonia> _13h: 所以我不知道他在講什麼 orz
12:31:04 <_13h> 我覺得他講的好像有點像 erlang 的 hot swapping 之類的機制
12:31:31 <favonia> _13h: 重新啟動其實是幻覺。終究還是要重新啟動，但是...
12:31:38 <favonia> 如果你一開始有兩個部份
12:31:48 <favonia> 你可以保持 UI 看起來變一點點
12:31:54 <favonia> 底下某部份重新啟動
12:31:58 <favonia> 就沒有人抱怨啦
12:32:12 <favonia> 或是有 N 部份也一樣
12:32:22 <favonia> 他抱怨的應該是 static linking 之類的
12:33:25 <favonia> 如果一開始程式就是好多 process 一起跑 把某個 process 關掉再打開本來就可以 orz
12:33:55 <_13h> 這也是  只要搞清楚想要什麼行為，應該都可以實作出來吧
12:34:15 <favonia> 一般程式語言的「變數」至少在理論中可以由 process 模擬
12:34:23 <favonia> 應該要把記憶體當作一個特別的 process
12:34:59 <favonia> 所謂 scope 可以跑到外面去的那種程式語言 某種程度上 就是那邊有個 protocol 可以傳資料過去
12:35:28 <favonia> 如果真的要這樣反正一開始寫成很多 process (可以用 thread 實作) 就好了
12:35:36 <_13h> 這是說每個狀態都是獨立的執行單元負責處理?
12:35:42 <favonia> 不爽的話就把某個 thread 關掉
12:35:58 <favonia> 嗯（理論上的執行單元... 我沒在管底下的實作）
12:36:20 <_13h> 瞭解
12:37:12 <favonia> 然後就算要重新啟動... 中間可以儲存 state 的技術是 serialization
12:37:37 <favonia> 這個我覺得有點型態系統明明就比較簡單 xD
12:37:46 <favonia> 總之我沒辦法被說服就是了
12:38:29 <favonia> 不能換掉一部份的原因不是因為型態系統... 而是因為你預先把程式都黏成一塊一起執行啊 orz orz
12:38:36 <_13h> favonia: 你應該去對 steve 洗腦XD
12:38:51 <favonia> (懶)
12:40:04 <_13h> 哈  反正他一個月才寫四小時  你可以寫滿一個月轟炸他XD
12:42:37 <favonia> _13h: 什麼一個月四小時？
12:43:16 <_13h> 喔  就是他在某篇文章說一個月只花四個小時在寫 blog 這件事上面
12:44:07 <favonia> （懶）
12:44:32 <favonia> 這四小時認真點可以把12話動畫看完
12:44:42 <_13h> 可以嗎@_@
12:44:57 <favonia> 去OP去ED無聊地方快轉應該可以
12:45:26 <_13h> 你可以排成電視牆那樣  半小時就可以看完了XD
12:45:37 <favonia> 這樣哪有辦法看啊 lol
12:45:44 <favonia> 我剛才那個還是專心看完啊
12:47:21 <_13h> 我看動畫其實都隨便看看，有時開兩個吧
12:47:33 <_13h> 輕鬆一點的作品可以這樣
12:47:43 <favonia> 雙螢幕（誤）
12:47:55 <favonia> 可以一眼看一個嗎
12:47:57 <_13h> 前幾年發現好像有辦法聽得懂兩邊在講什麼
12:48:04 <_13h> 我都用聽的啊  很少看畫面XD
12:48:51 <_13h> 一眼看一個感覺很累XD
12:49:26 <favonia> _13h: 也許有神奇的干擾超嚴重 3D 效果(誤)
12:50:04 <favonia> 乾脆以後在 OP 藏 3D 效果好了... 要兩集雙眼看才會看到
12:50:14 <_13h> 如果變 3D 效果還能看得下去就很神了XD
12:51:23 <_13h> 不過現在電視可以弄假 3D，回家實驗一下好了XD
12:53:23 <_13h> 其實我一直很想講  學 haskell 好像不輸 java，一打開網頁都是一堆新名詞XD
12:53:43 <_13h> 有時候一直查 reference，查到都忘了原本在看什麼東西了
12:55:53 <favonia> xDDD
12:56:13 <favonia> 廣告詞：「你想享受按 doc 連結的樂趣嗎」
12:58:00 <cataska> 一個月四小時可以寫這麼長的文章...
12:58:50 <cataska> 而且每一篇都這麼長...
12:58:52 <_13h> 不知道  但忘了在哪一篇  他說寫一寫超過兩小時，下個月可能會看到短篇XD
13:08:21 <favonia> _13h: 我剛才走一圈回來就知道怎麼反駁他的影體軟體了...
13:08:32 <favonia> _13h: 硬體
13:09:01 <favonia> _13h: USB 是硬體啊 orz 這明明就可以做到 xD
13:22:00 <_13h> 唔，不過 usb stack 應該算在軟體? 感覺再想下去頭會痛起來@_@
13:24:47 <favonia> _13h: 好吧再說 xD
13:25:31 <favonia> _13h: 喔我剛才好奇找到 plugins 了... 想說沒有人寫改天有空來寫寫看
13:25:32 <favonia> http://hackage.haskell.org/package/plugins-1.5.3.0
13:26:39 <favonia> _13h: 這個有哪裡不好用嗎 orz
13:27:53 <_13h> favonia: 等我把所有連結和相關連結都點開並看完後，也許可以回答你好不好用XD
13:30:24 <_13h> 不過我昨天是有想到一個問題.... 怎麼在 function 中拿到目前的 function name? 類似 c 的 __func__
13:35:16 <favonia> _13h: C 之中是 procedure... Haskell 沒有這概念
13:35:28 <favonia> 或是說全部都回歸到 function
13:35:35 <_13h> 嗯...
13:36:08 <favonia> 另外一件事情是 程式碼夠短的時候 __func__ 根本沒有比較清楚 www
13:36:59 <_13h> 大概吧，但是在大程式應該很好用? 至少知道錯誤發生的地方
