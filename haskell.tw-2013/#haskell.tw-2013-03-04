00:00:58 <letoh> 哈
00:01:13 <letoh> 這站真的很白癡  哪裡弄來這堆圖
00:11:03 <letoh> 2.0.0-p0
00:11:28 <CindyLinz> 還是看不懂 orz
00:13:42 <CindyLinz> 這個比較好懂 XD # http://this-plt-life.tumblr.com/post/44333853864/when-i-look-at-a-pls-implementation#notes
00:14:06 <CindyLinz> http://this-plt-life.tumblr.com/post/44079123074/when-im-working-on-a-new-pl-most-of-the-time#notes
00:19:59 <mno2> yinwang 又開始寫文章了
00:20:29 <CindyLinz> !
00:20:52 <suhorng> !
00:20:56 <CindyLinz> favonia 的名字音譯也是 yinwang 呢
08:54:30 <suhorng> http://this-plt-life.tumblr.com/post/41439555366/when-oleg-shows-a-newbie-how-to-solve-a-problem XDDDDDDDD
08:54:34 <suhorng> 太讚了
09:06:47 <suhorng> http://this-plt-life.tumblr.com/post/36425241559/when-i-read-a-blog-post-by-robert-harper xDDD
09:48:30 <b4283> http://this-plt-life.tumblr.com/post/44462204757 真的是這樣嗎... (汗)
12:03:48 <CindyLinz> 有人名的比較好笑 XD
12:07:42 <b4283> :)
20:27:22 <suhorng> > let a = 1; b = 2 in a + b
20:27:23 <lambdabot>   3
20:28:04 <suhorng> > let nil = \c n -> n; cons v lst = \c n -> c v (lst c n); xs = cons 1 (cons 2 (cons 3 (cons 4 nil))) in xs (:) []
20:28:06 <lambdabot>   [1,2,3,4]
20:29:28 <favonia> suhorng: Church encoding?
20:30:19 <suhorng> > let nothing = \j n -> n; just a = \j n -> j a; val1 = just 5; val2 = nothing in (show $ val1 Just Nothing) ++ ", " ++ (show $ val2 Just Nothing)
20:30:21 <lambdabot>   "Just 5, Nothing"
20:30:49 <suhorng> favonia: 對呀XD 突然很好奇直接用 λ 來弄 data type 是什麼感覺
20:31:23 <favonia> 如果全部都是這樣，那就不能 pattern matching...
20:31:45 <suhorng> 分函式丟進去不算嗎? 像後來那個 nothing 跟 just
20:31:46 <favonia> 所有東西就像 OOP 的物件（好爛的譬喻）一樣「藏」起來
20:32:00 <favonia> 那是因為你有其他不是 Church encoding 的東西
20:32:08 <favonia> 可以把內容「倒」出來
20:32:20 <favonia> 在 lambda calculus 的世界裡面你倒不出來
20:32:24 <suhorng> 嗯@@""
20:32:55 <suhorng> 感覺 case e of A -> e1 | B -> e2 | C -> e3 變形成 e e1 e2 e3 好像差不多的說..
20:33:41 <suhorng> 原本是在想說, Haskell中我們給一個data type、以及 constructor、destructor (??) 可以拿來寫 fold
20:34:00 <suhorng> 但是 Category theory 中是給 functor、constructor 跟 fold 來寫出其他的
20:34:02 <suhorng> 想模擬一下
20:36:42 <suhorng> favonia: 噢對耶.. 像自然數的話就很明顯, 真的不能 pattern matching Orz
21:32:28 <b4283> 14章讀完了，我覺得 monad 比 applicative functor 好懂耶 ....
21:32:53 <b4283> 不過最後面那個 <=< 看不太懂..
21:35:01 <suhorng> fish!!
21:36:33 <suhorng> b4283: 那個叫 Kleisli (fish) 的樣子
21:40:38 <b4283> 對啊，我當時看就覺得這個很像魚XD
21:41:10 <b4283> 他是拿來說明 monad laws
21:41:45 <b4283> 我發現我只要遇到 haskell 裡面的 higher order 通常會看不懂 :/
21:45:49 <suhorng> 不知道為什麼弄成 <=< 的形式就很對稱XD
21:45:57 <suhorng> 跟函數合成一模一樣
21:50:11 <b4283> 而且 monad 用語法把 function chain 包成類似 imperative 的型式真是太鬼神了
21:50:29 <b4283> 我在捷運上有偷笑一下XD
21:53:20 <b4283> 「這個語法是開玩笑的吧？」
21:53:29 <CindyLinz> :D
21:54:19 <CindyLinz> 改用 =<< 你可以由下往上寫唷 :D
21:55:42 <suhorng> www
21:55:56 <letoh> 這樣有什麼好處嗎? 又不是 befunge XD
21:56:58 <suhorng> quote: "Haskell is the world’s best imperative programming language!"
21:57:44 <suhorng> CindyLinz: 為什麼你昨天說 Scheme 是惡魔呀XD
21:57:58 <CindyLinz> suhorng: 我一定不是說 Scheme 是惡魔..
21:58:08 <CindyLinz> suhorng: 我應該是說 letoh 是惡魔... XDDDD
21:58:28 <suhorng> 這..w
21:58:42 <CindyLinz> letoh: 這樣是「開更大的玩笑」XD 
21:58:46 <CindyLinz> # 21:53 < b4283> 「這個語法是開玩笑的吧？」
21:58:58 <letoh> XDXD
22:00:02 <CindyLinz> suhorng: 我覺得 letoh 用 C macro 建構一套語言, 把 C (和 C 寫的函數) 當成某種意義上 vm 的 system call
22:00:22 <CindyLinz> 實在是入魔太深了..
22:00:48 <suhorng> 酷耶!
22:00:49 <CindyLinz> 就像逆練九陰真經一樣...
22:00:55 <letoh> 其實沒做到那麼徹底啦  不過是有一點這樣的意思XD
22:00:56 <CindyLinz> 非常強大..... wwww
22:01:05 <suhorng> 真的太厲害了
22:01:10 <CindyLinz> suhorng: 好孩子千萬不要學...
22:03:16 <CindyLinz> 是說.. 去年 FLOLAC 邏輯考卷大部分的人都是由下往上寫吧? :p
22:03:46 <favonia> (我看過反過來的 paper...)
22:04:06 <letoh> 要用鏡子看的那種反過來嗎?
22:04:39 <favonia> 上下顛倒而已啦
22:04:51 <letoh> 所以要倒立看? (誤
22:05:22 <CindyLinz> 我是不知道要怎麼分辨上下顛倒還是左右相反 ^^|
22:05:31 <CindyLinz> 這兩個不是一樣嗎?
22:05:53 <letoh> 應該不太一樣
22:06:06 <suhorng> mno2: 可以請問你說 yinwang 在寫的文章是哪篇嗎?
22:06:06 <letoh> 上下顛倒應該轉 180 度就可以了?
22:06:08 <CindyLinz> 不是轉 180% 就變成另一種了? o.o
22:08:58 <mno2> suhorng: 他砍文了
22:09:19 <suhorng> 好吧QQ
22:09:23 <favonia> mno2: er...
22:09:57 <letoh> 下次看到有文章趕快丟 web archive XD
22:10:04 <mno2> 看他文章手腳要快 wwww
22:10:16 <letoh> 不過人家不想留的話好像不太好XD
22:10:47 <mno2> http://webcache.googleusercontent.com/search?q=cache:yNXTyY7dk1MJ:blog.sina.com.cn/s/blog_5d90e82f0101iiwl.html+&cd=1&hl=zh-TW&ct=clnk&gl=tw
22:10:50 <mno2> 庫存
22:10:53 <CindyLinz> !
22:11:06 <suhorng> 喔喔喔!!
22:11:22 <mno2> 不過他今天有發遊戲文啊 wwwww
22:11:26 <mno2> http://blog.sina.com.cn/s/blog_5d90e82f0101ijy5.html
22:11:34 <suhorng> 好險(好險嗎?)他以前寫的一些PLT的文章找得到備份@_@"
22:11:38 <suhorng> XDD
22:15:33 <mno2> CindyLinz 有玩 Braid 嗎？
22:15:35 <favonia> mno2: 他還是沒有講那遊戲（我覺得）最精彩的地方
22:15:41 <favonia> 不要問我，我不會講 xD
22:16:08 <mno2> 我沒有玩過，想說買一套來玩
22:16:26 <CindyLinz> mno2: 沒聽過 :|
22:20:09 <letoh> undo 功能感覺像是時之砂...
22:20:59 <letoh> （如果你见过磁带录音机的话）
22:21:05 <letoh> 這東西沒那麼古老吧? XD
22:21:20 <mno2> 波斯王子？
22:22:03 <letoh> 對呀  裡面有個操作是讓時間回溯幾秒
22:22:48 <letoh> 不過我覺得這遊戲真的要巧妙的話  應該要把謎題設計成得透過回溯時間來解開
22:23:37 <letoh> 而不只是讓玩家可以逃過一劫
22:24:44 <letoh> 多重宇宙還蠻炫的
22:30:13 <b4283> multiverse
22:38:04 <suhorng> letoh: 你寫這次的作業了嗎 orz
22:38:13 <letoh> 哪一次的? ruby 的還沒寫
22:39:47 <suhorng> 明天要deadline的, HW5
22:40:08 <letoh> 寫了  只剩 challenge
22:40:56 <suhorng> 嗯! 有點遭 我現在才開始看題目QQ
22:42:02 <letoh> 唔  蠻簡單的，不過第一題的題目沒看清楚  害我 submit 兩次XD
22:42:18 <suhorng> XDD 來拼拼看!
22:42:24 <letoh> 暖身的那兩題對後面好像沒影響，所以寫錯也不會怎樣
22:46:47 <letoh> 我用 fvwm 很久了，而且我可能也看過王垠的介紹文 (不太確定...
