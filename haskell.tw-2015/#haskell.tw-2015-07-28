13:08:11 <mno2> http://hackage.haskell.org/package/nvim-hs
13:08:22 <mno2> [plugin provider for neovim]
13:08:28 <mno2> 最近嘗試了一下 neovim
13:09:14 <mno2> 無痛轉換，不過好像短期內沒有太大明顯有點
13:09:36 <mno2> 這個應該可以用 haskell 寫 neovim plugin
13:09:54 <mno2> https://www.youtube.com/watch?v=qlnU73a3Cw0
13:10:01 <mno2> [Distributed programming in haskell]
13:11:58 <CindyLinz> neovim 是個仿 vim editor 嗎?
13:12:14 <CindyLinz> 那和 vim 的差異在哪呢?
13:14:31 <mno2> 就是後面變成 server 吧？ render 是 client
13:14:41 <mno2> 這樣 plugin 就可以用任何語言寫了
13:14:59 <mno2> 主要應該就是把架構改得比較好
13:15:06 <mno2> 比較容易擴展
13:15:09 <mno2> （我的理解啦）
13:15:14 <mno2> 沒有認真研究
13:15:16 <CindyLinz> 通常 server 也是在 local 跑嗎?
13:15:22 <mno2> 對啊
13:15:57 <CindyLinz> 喔, 如果要用 neovim 來修改遠端主機上的檔案, 就可以把 server 跑在遠端, client 跑在 local 這樣?
13:16:10 <mno2> 這我不確定
13:16:16 <CindyLinz> 預期 client 應該有作些設計, 來減低 latency
13:16:25 <mno2> 應該不是走 tcp/ip ?
13:16:39 <CindyLinz> neovim 是用 vim 的原始碼改的, 還是重新寫啊?
13:16:46 <mno2> fork
13:17:18 <CindyLinz> 那理解為有很多共同的 code 好了 ^^
13:17:40 <mno2> A Neovim remote plugin (rplugin) is any program that talks to nvim through the remote API (
13:17:44 <mno2> 有 remote plugin
13:18:00 <mno2> 走 msgpack-rpc
13:18:56 <CindyLinz> 雖然從 neovim 的 introduction 看不出來這回事 ^^| # https://github.com/neovim/neovim/wiki/Introduction
13:19:09 <CindyLinz> 原來是一個 plugin 的功能 ^^|
13:20:06 <CindyLinz> 那我想 client 部分不會對 latency 作特別考量, 因為原本根本沒有設想會有遠端存取這回事...
13:21:18 <mno2> 應該吧
13:54:27 <kcwu> neovim 當初登高一呼, 提出很多遠大的目標.... 一方面目標設太大很多人不看好, 一方面也因此有許多人熱血加入....
14:22:08 <cibs> client-server 的架構不是 emacs 的專長嗎? @@
14:32:52 <mno2> 目前用起來是感覺沒什麼差就是，這同時可以成為轉換的理由，也可以成為不轉換的理由
14:33:18 <mno2> spf13 distribution 裝起來也沒什麼問題
18:48:31 <yen3> :q
